apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}


buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath androidBuildArtifact
    }
}

dependencies {
    androidTestCompile 'junit:junit:' + junitVersion
    compile project(':public:libs:zxing-android')
    compile project(':public:coinapult')
    compile project(':public:wapi')
    compile project(':public:trezor')
    compile project(':public:lt-api')
    compile project(':public:mbwlib')
    compile project(':public:btchip')

    compile guavaArtifact
    compile 'com.squareup:otto:1.3.4'
    compile 'com.android.support:appcompat-v7:19.1.0'
    compile 'com.android.support:support-v4:19.1.0'
    compile 'com.google.android.gms:play-services-base:7.8.0'
    compile 'com.google.android.gms:play-services-gcm:7.8.0'
    compile 'org.ocpsoft.prettytime:prettytime:3.2.5.Final'
    compile 'de.cketti.library.changelog:ckchangelog:1.2.2'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'io.reactivex:rxandroid:0.24.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.android.support:multidex:1.0.1'

}

def commonDebugKeystore = file("../../keystore_debug")

android {

    dexOptions {
        javaMaxHeapSize "4g"
        jumboMode = true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
    }

    compileOptions {
        sourceCompatibility = 'VERSION_1_6'
        targetCompatibility = 'VERSION_1_6'
    }

    buildToolsVersion androidSdkBuildVersion

    defaultConfig {
        versionCode 25300
        versionName '2.5.3'
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias = ''
        }
        btctestnet {
            keyAlias = ''
        }
        commonDebug {
            storeFile commonDebugKeystore
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {

/*
        debug {
            debuggable true
            runProguard true
            proguardFile 'mbw.pro'
        }
*/

        release {
            minifyEnabled true
            proguardFile 'mbw.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    if (file != null && file.name.endsWith('.apk')) {
                        def versionExtension = "-" + defaultConfig.versionName + "build" + defaultConfig.versionCode + ".apk"
                        output.outputFile = new File(file.parent, file.name.replace(".apk", versionExtension))
                    }
                }
            }
        }
    }

    productFlavors {
        prodnet {
            compileSdkVersion 21
            targetSdkVersion 19
            minSdkVersion 14

            applicationId 'com.mycelium.wallet'
            versionName = defaultConfig.versionName
            signingConfig signingConfigs.release
        }
        dev {
            // use Sdk21 for dev only - this allows to use native MultiDex without going through proguard (faster)
            compileSdkVersion 21
            buildToolsVersion androidSdkBuildVersion
            minSdkVersion 21

            // if we are not on master, include the branchname in appId
            def appId = 'com.mycelium.devwallet.github';
            def branch = getGitBranch()

            if (branch != "" && branch != "master") {
                appId = appId + "_" + branch
                versionName = defaultConfig.versionName + "-DEV_" + branch
            }

            applicationId appId
            signingConfig signingConfigs.debug
        }
        btctestnet {
            compileSdkVersion 19
            targetSdkVersion 19
            minSdkVersion 14

            applicationId 'com.mycelium.testnetwallet'
            versionName = defaultConfig.versionName + '-TESTNET'
            signingConfig signingConfigs.btctestnet
        }
    }


    sourceSets {
        androidTest {
            java.srcDirs = ['instrumentTest/java']
        }
    }

}

if (commonDebugKeystore.exists()) {
    android.buildTypes.debug.signingConfig = android.signingConfigs.commonDebug
    android.productFlavors.dev.signingConfig = android.signingConfigs.commonDebug
    logger.info("keytore_debug detected")
}



if (project.hasProperty('prodKeyStore') &&
        project.hasProperty('prodKeyAlias') &&
        project.hasProperty('prodKeyStorePassword') &&
        project.hasProperty('prodKeyAliasPassword')) {
    android.signingConfigs.release.storeFile = file('../../' + prodKeyStore)
    android.signingConfigs.release.keyAlias = prodKeyAlias
    android.signingConfigs.release.storePassword = prodKeyStorePassword
    android.signingConfigs.release.keyPassword = prodKeyAliasPassword
} else {
    android.productFlavors.prodnet.signingConfig = null
}

if (project.hasProperty('testKeyStore') &&
        project.hasProperty('testKeyAlias') &&
        project.hasProperty('testKeyStorePassword') &&
        project.hasProperty('testKeyAliasPassword')) {
    android.signingConfigs.btctestnet.storeFile = file('../../' + testKeyStore)
    android.signingConfigs.btctestnet.keyAlias = testKeyAlias
    android.signingConfigs.btctestnet.storePassword = testKeyStorePassword
    android.signingConfigs.btctestnet.keyPassword = testKeyAliasPassword
} else {
    android.productFlavors.btctestnet.signingConfig = null
}